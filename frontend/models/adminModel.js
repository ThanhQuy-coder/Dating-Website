  console.log("‚úÖ adminModel.js loaded OK");

  export const adminModel = {
    // üü¢ L·∫•y danh s√°ch users
    async getUsers() {
      const res = await fetch('/api/admin/users.php');
      return await res.json();
    },

    // üü¢ C·∫≠p nh·∫≠t tr·∫°ng th√°i user (ban/unban)
    async updateUserStatus(id, status) {
      const res = await fetch('/api/admin/users.php', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ id, status })
      });
      return res.json();
    },

    // üü¢ C·∫≠p nh·∫≠t th√¥ng tin user (username, email)
    async updateUserInfo(id, username, email) {
      const res = await fetch('/api/admin/users.php', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ id, username, email })
      });
      return res.json();
    },

    // üü¢ L·∫•y danh s√°ch b√°o c√°o
    async getReports() {
      try {
        const res = await fetch('api/admin/reports.php');
        if (!res.ok) throw new Error(`‚ùå GET reports l·ªói: ${res.status}`);

        const text = await res.text();
        try {
          return JSON.parse(text);
        } catch (parseErr) {
          console.error('‚ùå API getReports tr·∫£ v·ªÅ kh√¥ng ph·∫£i JSON:', text);
          throw new Error('API getReports tr·∫£ v·ªÅ d·ªØ li·ªáu kh√¥ng h·ª£p l·ªá');
        }
      } catch (err) {
        console.error(err);
        return [];
      }
    },

    // üü¢ C·∫≠p nh·∫≠t tr·∫°ng th√°i b√°o c√°o
    async updateReportStatus(id, status) {
      try {
        const res = await fetch('api/admin/reports.php', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ id, status })
        });
        if (!res.ok) throw new Error(`‚ùå POST updateReportStatus l·ªói: ${res.status}`);

        const text = await res.text();
        try {
          return JSON.parse(text);
        } catch (parseErr) {
          console.error('‚ùå API updateReportStatus tr·∫£ v·ªÅ kh√¥ng ph·∫£i JSON:', text);
          throw new Error('API updateReportStatus tr·∫£ v·ªÅ d·ªØ li·ªáu kh√¥ng h·ª£p l·ªá');
        }
      } catch (err) {
        console.error(err);
        return { success: false, message: 'L·ªói khi c·∫≠p nh·∫≠t b√°o c√°o' };
      }
    },

    // üü¢ L·∫•y th·ªëng k√™ dashboard
    async getDashboardStats() {
      try {
        const res = await fetch('api/admin/dashboard.php');
        if (!res.ok) throw new Error(`‚ùå GET dashboardStats l·ªói: ${res.status}`);

        const text = await res.text();
        try {
          return JSON.parse(text);
        } catch (parseErr) {
          console.error('‚ùå API getDashboardStats tr·∫£ v·ªÅ kh√¥ng ph·∫£i JSON:', text);
          throw new Error('API getDashboardStats tr·∫£ v·ªÅ d·ªØ li·ªáu kh√¥ng h·ª£p l·ªá');
        }
      } catch (err) {
        console.error(err);
        return {};
      }
    },


    // üü¢ L·∫•y d·ªØ li·ªáu ng∆∞·ªùi d√πng m·ªõi theo ng√†y
  async getUserGrowthData() {
    try {
      const res = await fetch('/api/admin/getUserGrowthData.php');
      if (!res.ok) throw new Error('Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu ng∆∞·ªùi d√πng m·ªõi');
      return await res.json();
    } catch (err) {
      console.error('L·ªói khi l·∫•y user growth:', err);
      return [0, 0, 0, 0, 0, 0, 0];
    }
  },

  async getDailyActivityData() {
    try {
      const res = await fetch('/api/admin/getDailyActivityData.php');
      if (!res.ok) throw new Error('Kh√¥ng l·∫•y ƒë∆∞·ª£c ho·∫°t ƒë·ªông h√†ng ng√†y');
      return await res.json(); // v√¨ API tr·∫£ m·∫£ng tr·ª±c ti·∫øp
    } catch (err) {
      console.error('L·ªói khi l·∫•y daily activity:', err);
      return [0, 0, 0, 0, 0, 0, 0]; // fallback n·∫øu l·ªói
    }
  }



  };

